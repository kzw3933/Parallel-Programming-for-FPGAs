// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dft,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.517000,HLS_SYN_LAT=111,HLS_SYN_TPT=none,HLS_SYN_MEM=162,HLS_SYN_DSP=1880,HLS_SYN_FF=97962,HLS_SYN_LUT=134638,HLS_VERSION=2020_1}" *)

module dft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sample_real_0_i,
        sample_real_0_o,
        sample_real_0_o_ap_vld,
        sample_real_1_i,
        sample_real_1_o,
        sample_real_1_o_ap_vld,
        sample_real_2_i,
        sample_real_2_o,
        sample_real_2_o_ap_vld,
        sample_real_3_i,
        sample_real_3_o,
        sample_real_3_o_ap_vld,
        sample_real_4_i,
        sample_real_4_o,
        sample_real_4_o_ap_vld,
        sample_real_5_i,
        sample_real_5_o,
        sample_real_5_o_ap_vld,
        sample_real_6_i,
        sample_real_6_o,
        sample_real_6_o_ap_vld,
        sample_real_7_i,
        sample_real_7_o,
        sample_real_7_o_ap_vld,
        sample_imag_0_i,
        sample_imag_0_o,
        sample_imag_0_o_ap_vld,
        sample_imag_1_i,
        sample_imag_1_o,
        sample_imag_1_o_ap_vld,
        sample_imag_2_i,
        sample_imag_2_o,
        sample_imag_2_o_ap_vld,
        sample_imag_3_i,
        sample_imag_3_o,
        sample_imag_3_o_ap_vld,
        sample_imag_4_i,
        sample_imag_4_o,
        sample_imag_4_o_ap_vld,
        sample_imag_5_i,
        sample_imag_5_o,
        sample_imag_5_o_ap_vld,
        sample_imag_6_i,
        sample_imag_6_o,
        sample_imag_6_o_ap_vld,
        sample_imag_7_i,
        sample_imag_7_o,
        sample_imag_7_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state80 = 6'd4;
parameter    ap_ST_fsm_state81 = 6'd8;
parameter    ap_ST_fsm_state82 = 6'd16;
parameter    ap_ST_fsm_state83 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] sample_real_0_i;
output  [63:0] sample_real_0_o;
output   sample_real_0_o_ap_vld;
input  [63:0] sample_real_1_i;
output  [63:0] sample_real_1_o;
output   sample_real_1_o_ap_vld;
input  [63:0] sample_real_2_i;
output  [63:0] sample_real_2_o;
output   sample_real_2_o_ap_vld;
input  [63:0] sample_real_3_i;
output  [63:0] sample_real_3_o;
output   sample_real_3_o_ap_vld;
input  [63:0] sample_real_4_i;
output  [63:0] sample_real_4_o;
output   sample_real_4_o_ap_vld;
input  [63:0] sample_real_5_i;
output  [63:0] sample_real_5_o;
output   sample_real_5_o_ap_vld;
input  [63:0] sample_real_6_i;
output  [63:0] sample_real_6_o;
output   sample_real_6_o_ap_vld;
input  [63:0] sample_real_7_i;
output  [63:0] sample_real_7_o;
output   sample_real_7_o_ap_vld;
input  [63:0] sample_imag_0_i;
output  [63:0] sample_imag_0_o;
output   sample_imag_0_o_ap_vld;
input  [63:0] sample_imag_1_i;
output  [63:0] sample_imag_1_o;
output   sample_imag_1_o_ap_vld;
input  [63:0] sample_imag_2_i;
output  [63:0] sample_imag_2_o;
output   sample_imag_2_o_ap_vld;
input  [63:0] sample_imag_3_i;
output  [63:0] sample_imag_3_o;
output   sample_imag_3_o_ap_vld;
input  [63:0] sample_imag_4_i;
output  [63:0] sample_imag_4_o;
output   sample_imag_4_o_ap_vld;
input  [63:0] sample_imag_5_i;
output  [63:0] sample_imag_5_o;
output   sample_imag_5_o_ap_vld;
input  [63:0] sample_imag_6_i;
output  [63:0] sample_imag_6_o;
output   sample_imag_6_o_ap_vld;
input  [63:0] sample_imag_7_i;
output  [63:0] sample_imag_7_o;
output   sample_imag_7_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] sample_real_0_o;
reg sample_real_0_o_ap_vld;
reg[63:0] sample_real_1_o;
reg sample_real_1_o_ap_vld;
reg[63:0] sample_real_2_o;
reg sample_real_2_o_ap_vld;
reg[63:0] sample_real_3_o;
reg sample_real_3_o_ap_vld;
reg[63:0] sample_real_4_o;
reg sample_real_4_o_ap_vld;
reg[63:0] sample_real_5_o;
reg sample_real_5_o_ap_vld;
reg[63:0] sample_real_6_o;
reg sample_real_6_o_ap_vld;
reg[63:0] sample_real_7_o;
reg sample_real_7_o_ap_vld;
reg[63:0] sample_imag_0_o;
reg sample_imag_0_o_ap_vld;
reg[63:0] sample_imag_1_o;
reg sample_imag_1_o_ap_vld;
reg[63:0] sample_imag_2_o;
reg sample_imag_2_o_ap_vld;
reg[63:0] sample_imag_3_o;
reg sample_imag_3_o_ap_vld;
reg[63:0] sample_imag_4_o;
reg sample_imag_4_o_ap_vld;
reg[63:0] sample_imag_5_o;
reg sample_imag_5_o_ap_vld;
reg[63:0] sample_imag_6_o;
reg sample_imag_6_o_ap_vld;
reg[63:0] sample_imag_7_o;
reg sample_imag_7_o_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] i_0_reg_388;
reg   [3:0] i_0_reg_388_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_state48_pp0_stage0_iter46;
wire    ap_block_state49_pp0_stage0_iter47;
wire    ap_block_state50_pp0_stage0_iter48;
wire    ap_block_state51_pp0_stage0_iter49;
wire    ap_block_state52_pp0_stage0_iter50;
wire    ap_block_state53_pp0_stage0_iter51;
wire    ap_block_state54_pp0_stage0_iter52;
wire    ap_block_state55_pp0_stage0_iter53;
wire    ap_block_state56_pp0_stage0_iter54;
wire    ap_block_state57_pp0_stage0_iter55;
wire    ap_block_state58_pp0_stage0_iter56;
wire    ap_block_state59_pp0_stage0_iter57;
wire    ap_block_state60_pp0_stage0_iter58;
wire    ap_block_state61_pp0_stage0_iter59;
wire    ap_block_state62_pp0_stage0_iter60;
wire    ap_block_state63_pp0_stage0_iter61;
wire    ap_block_state64_pp0_stage0_iter62;
wire    ap_block_state65_pp0_stage0_iter63;
wire    ap_block_state66_pp0_stage0_iter64;
wire    ap_block_state67_pp0_stage0_iter65;
wire    ap_block_state68_pp0_stage0_iter66;
wire    ap_block_state69_pp0_stage0_iter67;
wire    ap_block_state70_pp0_stage0_iter68;
wire    ap_block_state71_pp0_stage0_iter69;
wire    ap_block_state72_pp0_stage0_iter70;
wire    ap_block_state73_pp0_stage0_iter71;
wire    ap_block_state74_pp0_stage0_iter72;
wire    ap_block_state75_pp0_stage0_iter73;
wire    ap_block_state76_pp0_stage0_iter74;
wire    ap_block_state77_pp0_stage0_iter75;
wire    ap_block_state78_pp0_stage0_iter76;
wire    ap_block_state79_pp0_stage0_iter77;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_0_reg_388_pp0_iter2_reg;
reg   [3:0] i_0_reg_388_pp0_iter3_reg;
reg   [3:0] i_0_reg_388_pp0_iter4_reg;
reg   [3:0] i_0_reg_388_pp0_iter5_reg;
reg   [3:0] i_0_reg_388_pp0_iter6_reg;
reg   [3:0] i_0_reg_388_pp0_iter7_reg;
reg   [3:0] i_0_reg_388_pp0_iter8_reg;
reg   [3:0] i_0_reg_388_pp0_iter9_reg;
reg   [3:0] i_0_reg_388_pp0_iter10_reg;
reg   [3:0] i_0_reg_388_pp0_iter11_reg;
reg   [3:0] i_0_reg_388_pp0_iter12_reg;
reg   [3:0] i_0_reg_388_pp0_iter13_reg;
reg   [3:0] i_0_reg_388_pp0_iter14_reg;
reg   [3:0] i_0_reg_388_pp0_iter15_reg;
reg   [3:0] i_0_reg_388_pp0_iter16_reg;
reg   [3:0] i_0_reg_388_pp0_iter17_reg;
reg   [3:0] i_0_reg_388_pp0_iter18_reg;
reg   [3:0] i_0_reg_388_pp0_iter19_reg;
reg   [3:0] i_0_reg_388_pp0_iter20_reg;
reg   [3:0] i_0_reg_388_pp0_iter21_reg;
reg   [3:0] i_0_reg_388_pp0_iter22_reg;
reg   [3:0] i_0_reg_388_pp0_iter23_reg;
reg   [3:0] i_0_reg_388_pp0_iter24_reg;
reg   [3:0] i_0_reg_388_pp0_iter25_reg;
reg   [3:0] i_0_reg_388_pp0_iter26_reg;
reg   [3:0] i_0_reg_388_pp0_iter27_reg;
reg   [3:0] i_0_reg_388_pp0_iter28_reg;
reg   [3:0] i_0_reg_388_pp0_iter29_reg;
reg   [3:0] i_0_reg_388_pp0_iter30_reg;
reg   [3:0] i_0_reg_388_pp0_iter31_reg;
reg   [3:0] i_0_reg_388_pp0_iter32_reg;
reg   [3:0] i_0_reg_388_pp0_iter33_reg;
reg   [3:0] i_0_reg_388_pp0_iter34_reg;
reg   [3:0] i_0_reg_388_pp0_iter35_reg;
reg   [3:0] i_0_reg_388_pp0_iter36_reg;
reg   [3:0] i_0_reg_388_pp0_iter37_reg;
reg   [3:0] i_0_reg_388_pp0_iter38_reg;
reg   [3:0] i_0_reg_388_pp0_iter39_reg;
reg   [3:0] i_0_reg_388_pp0_iter40_reg;
reg   [3:0] i_0_reg_388_pp0_iter41_reg;
reg   [3:0] i_0_reg_388_pp0_iter42_reg;
reg   [3:0] i_0_reg_388_pp0_iter43_reg;
reg   [3:0] i_0_reg_388_pp0_iter44_reg;
reg   [3:0] i_0_reg_388_pp0_iter45_reg;
reg   [3:0] i_0_reg_388_pp0_iter46_reg;
reg   [3:0] i_0_reg_388_pp0_iter47_reg;
reg   [3:0] i_0_reg_388_pp0_iter48_reg;
reg   [3:0] i_0_reg_388_pp0_iter49_reg;
reg   [3:0] i_0_reg_388_pp0_iter50_reg;
reg   [3:0] i_0_reg_388_pp0_iter51_reg;
reg   [3:0] i_0_reg_388_pp0_iter52_reg;
reg   [3:0] i_0_reg_388_pp0_iter53_reg;
reg   [3:0] i_0_reg_388_pp0_iter54_reg;
reg   [3:0] i_0_reg_388_pp0_iter55_reg;
reg   [3:0] i_0_reg_388_pp0_iter56_reg;
reg   [3:0] i_0_reg_388_pp0_iter57_reg;
reg   [3:0] i_0_reg_388_pp0_iter58_reg;
reg   [3:0] i_0_reg_388_pp0_iter59_reg;
reg   [3:0] i_0_reg_388_pp0_iter60_reg;
reg   [3:0] i_0_reg_388_pp0_iter61_reg;
reg   [3:0] i_0_reg_388_pp0_iter62_reg;
reg   [3:0] i_0_reg_388_pp0_iter63_reg;
reg   [3:0] i_0_reg_388_pp0_iter64_reg;
reg   [3:0] i_0_reg_388_pp0_iter65_reg;
reg   [3:0] i_0_reg_388_pp0_iter66_reg;
reg   [3:0] i_0_reg_388_pp0_iter67_reg;
reg   [3:0] i_0_reg_388_pp0_iter68_reg;
reg   [3:0] i_0_reg_388_pp0_iter69_reg;
reg   [3:0] i_0_reg_388_pp0_iter70_reg;
reg   [3:0] i_0_reg_388_pp0_iter71_reg;
reg   [3:0] i_0_reg_388_pp0_iter72_reg;
reg   [3:0] i_0_reg_388_pp0_iter73_reg;
reg   [3:0] i_0_reg_388_pp0_iter74_reg;
reg   [3:0] i_0_reg_388_pp0_iter75_reg;
reg   [3:0] i_0_reg_388_pp0_iter76_reg;
reg   [63:0] sample_real_0_read_reg_1063;
reg   [63:0] sample_imag_0_read_reg_1069;
reg   [63:0] sample_real_1_read_reg_1075;
reg   [63:0] sample_imag_1_read_reg_1081;
reg   [63:0] sample_real_2_read_reg_1087;
reg   [63:0] sample_imag_2_read_reg_1093;
reg   [63:0] sample_real_3_read_reg_1099;
reg   [63:0] sample_imag_3_read_reg_1105;
reg   [63:0] sample_real_4_read_reg_1111;
reg   [63:0] sample_imag_4_read_reg_1117;
reg   [63:0] sample_real_5_read_reg_1123;
reg   [63:0] sample_imag_5_read_reg_1129;
reg   [63:0] sample_real_6_read_reg_1135;
reg   [63:0] sample_imag_6_read_reg_1141;
reg   [63:0] sample_real_7_read_reg_1147;
reg   [63:0] sample_imag_7_read_reg_1153;
wire   [0:0] icmp_ln16_fu_1018_p2;
reg   [0:0] icmp_ln16_reg_1159;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter1_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter2_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter3_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter4_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter5_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter6_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter7_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter8_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter9_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter10_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter11_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter12_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter13_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter14_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter15_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter16_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter17_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter18_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter19_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter20_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter21_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter22_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter23_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter24_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter25_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter26_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter27_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter28_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter29_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter30_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter31_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter32_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter33_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter34_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter35_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter36_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter37_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter38_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter39_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter40_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter41_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter42_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter43_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter44_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter45_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter46_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter47_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter48_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter49_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter50_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter51_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter52_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter53_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter54_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter55_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter56_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter57_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter58_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter59_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter60_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter61_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter62_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter63_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter64_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter65_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter66_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter67_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter68_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter69_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter70_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter71_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter72_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter73_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter74_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter75_reg;
reg   [0:0] icmp_ln16_reg_1159_pp0_iter76_reg;
wire   [3:0] i_2_fu_1024_p2;
reg   [3:0] i_2_reg_1163;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] grp_fu_1015_p1;
reg   [63:0] tmp_reg_1173;
wire   [63:0] grp_fu_847_p2;
reg   [63:0] w_reg_1178;
reg   [63:0] w_reg_1178_pp0_iter9_reg;
reg   [63:0] w_reg_1178_pp0_iter10_reg;
reg   [63:0] w_reg_1178_pp0_iter11_reg;
reg   [63:0] w_reg_1178_pp0_iter12_reg;
reg   [63:0] w_reg_1178_pp0_iter13_reg;
reg   [63:0] w_reg_1178_pp0_iter14_reg;
reg   [63:0] w_reg_1178_pp0_iter15_reg;
reg   [63:0] w_reg_1178_pp0_iter16_reg;
reg   [63:0] w_reg_1178_pp0_iter17_reg;
reg   [63:0] w_reg_1178_pp0_iter18_reg;
reg   [63:0] w_reg_1178_pp0_iter19_reg;
reg   [63:0] w_reg_1178_pp0_iter20_reg;
reg   [63:0] w_reg_1178_pp0_iter21_reg;
reg   [63:0] w_reg_1178_pp0_iter22_reg;
reg   [63:0] w_reg_1178_pp0_iter23_reg;
reg   [63:0] w_reg_1178_pp0_iter24_reg;
reg   [63:0] w_reg_1178_pp0_iter25_reg;
reg   [63:0] w_reg_1178_pp0_iter26_reg;
reg   [63:0] w_reg_1178_pp0_iter27_reg;
reg   [63:0] w_reg_1178_pp0_iter28_reg;
reg   [63:0] w_reg_1178_pp0_iter29_reg;
reg   [63:0] w_reg_1178_pp0_iter30_reg;
reg   [63:0] w_reg_1178_pp0_iter31_reg;
reg   [63:0] w_reg_1178_pp0_iter32_reg;
reg   [63:0] w_reg_1178_pp0_iter33_reg;
reg   [63:0] w_reg_1178_pp0_iter34_reg;
reg   [63:0] w_reg_1178_pp0_iter35_reg;
reg   [63:0] w_reg_1178_pp0_iter36_reg;
reg   [63:0] w_reg_1178_pp0_iter37_reg;
reg   [63:0] w_reg_1178_pp0_iter38_reg;
reg   [63:0] w_reg_1178_pp0_iter39_reg;
reg   [63:0] w_reg_1178_pp0_iter40_reg;
reg   [63:0] w_reg_1178_pp0_iter41_reg;
reg   [63:0] w_reg_1178_pp0_iter42_reg;
reg   [63:0] w_reg_1178_pp0_iter43_reg;
wire   [63:0] grp_fu_852_p2;
reg   [63:0] x_assign_reg_1191;
wire   [63:0] grp_fu_857_p2;
reg   [63:0] x_assign_2_reg_1197;
wire   [63:0] grp_sin_or_cos_double_s_fu_411_ap_return;
reg   [63:0] tmp_i_i_reg_1203;
wire   [63:0] grp_sin_or_cos_double_s_fu_430_ap_return;
reg   [63:0] tmp_i_i1_reg_1209;
wire   [63:0] grp_fu_862_p2;
reg   [63:0] x_assign_3_reg_1215;
wire   [63:0] grp_fu_867_p2;
reg   [63:0] tmp_4_reg_1221;
wire   [63:0] grp_fu_871_p2;
reg   [63:0] tmp_5_reg_1226;
wire   [63:0] grp_fu_875_p2;
reg   [63:0] tmp_8_reg_1231;
wire   [63:0] grp_fu_879_p2;
reg   [63:0] tmp_9_reg_1236;
wire   [63:0] grp_sin_or_cos_double_s_fu_449_ap_return;
reg   [63:0] tmp_i_i2_reg_1241;
wire   [63:0] grp_sin_or_cos_double_s_fu_468_ap_return;
reg   [63:0] tmp_i_i3_reg_1247;
wire   [63:0] grp_fu_883_p2;
reg   [63:0] x_assign_4_reg_1253;
wire   [63:0] grp_fu_715_p2;
reg   [63:0] tmp_6_reg_1259;
wire   [63:0] grp_fu_719_p2;
reg   [63:0] tmp_s_reg_1264;
wire   [63:0] grp_fu_888_p2;
reg   [63:0] tmp_4_1_reg_1269;
wire   [63:0] grp_fu_892_p2;
reg   [63:0] tmp_5_1_reg_1274;
wire   [63:0] grp_fu_896_p2;
reg   [63:0] tmp_8_1_reg_1279;
wire   [63:0] grp_fu_900_p2;
reg   [63:0] tmp_9_1_reg_1284;
wire   [63:0] grp_sin_or_cos_double_s_fu_487_ap_return;
reg   [63:0] tmp_i_i4_reg_1289;
wire   [63:0] grp_sin_or_cos_double_s_fu_506_ap_return;
reg   [63:0] tmp_i_i5_reg_1295;
wire   [63:0] grp_fu_904_p2;
reg   [63:0] x_assign_5_reg_1301;
wire   [63:0] grp_fu_723_p2;
reg   [63:0] tmp_7_reg_1307;
wire   [63:0] grp_fu_728_p2;
reg   [63:0] tmp_1_reg_1312;
wire   [63:0] grp_fu_733_p2;
reg   [63:0] tmp_6_1_reg_1317;
wire   [63:0] grp_fu_737_p2;
reg   [63:0] tmp_1_41_reg_1322;
wire   [63:0] grp_fu_909_p2;
reg   [63:0] tmp_4_2_reg_1327;
wire   [63:0] grp_fu_913_p2;
reg   [63:0] tmp_5_2_reg_1332;
wire   [63:0] grp_fu_917_p2;
reg   [63:0] tmp_8_2_reg_1337;
wire   [63:0] grp_fu_921_p2;
reg   [63:0] tmp_9_2_reg_1342;
wire   [63:0] grp_sin_or_cos_double_s_fu_525_ap_return;
reg   [63:0] tmp_i_i6_reg_1347;
wire   [63:0] grp_sin_or_cos_double_s_fu_544_ap_return;
reg   [63:0] tmp_i_i7_reg_1353;
wire   [63:0] grp_fu_925_p2;
reg   [63:0] x_assign_6_reg_1359;
wire   [63:0] grp_fu_741_p2;
reg   [63:0] tmp_7_1_reg_1365;
wire   [63:0] grp_fu_745_p2;
reg   [63:0] tmp_1_1_reg_1370;
wire   [63:0] grp_fu_749_p2;
reg   [63:0] tmp_6_2_reg_1375;
wire   [63:0] grp_fu_753_p2;
reg   [63:0] tmp_2_42_reg_1380;
wire   [63:0] grp_fu_930_p2;
reg   [63:0] tmp_4_3_reg_1385;
wire   [63:0] grp_fu_934_p2;
reg   [63:0] tmp_5_3_reg_1390;
wire   [63:0] grp_fu_938_p2;
reg   [63:0] tmp_8_3_reg_1395;
wire   [63:0] grp_fu_942_p2;
reg   [63:0] tmp_9_3_reg_1400;
wire   [63:0] grp_sin_or_cos_double_s_fu_563_ap_return;
reg   [63:0] tmp_i_i8_reg_1405;
wire   [63:0] grp_sin_or_cos_double_s_fu_582_ap_return;
reg   [63:0] tmp_i_i9_reg_1411;
wire   [63:0] grp_fu_946_p2;
reg   [63:0] x_assign_7_reg_1417;
wire   [63:0] grp_fu_757_p2;
reg   [63:0] tmp_7_2_reg_1423;
wire   [63:0] grp_fu_761_p2;
reg   [63:0] tmp_1_2_reg_1428;
wire   [63:0] grp_fu_765_p2;
reg   [63:0] tmp_6_3_reg_1433;
wire   [63:0] grp_fu_769_p2;
reg   [63:0] tmp_3_reg_1438;
wire   [63:0] grp_fu_951_p2;
reg   [63:0] tmp_4_4_reg_1443;
wire   [63:0] grp_fu_955_p2;
reg   [63:0] tmp_5_4_reg_1448;
wire   [63:0] grp_fu_959_p2;
reg   [63:0] tmp_8_4_reg_1453;
wire   [63:0] grp_fu_963_p2;
reg   [63:0] tmp_9_4_reg_1458;
wire   [63:0] grp_sin_or_cos_double_s_fu_601_ap_return;
reg   [63:0] tmp_i_i10_reg_1463;
wire   [63:0] grp_sin_or_cos_double_s_fu_620_ap_return;
reg   [63:0] tmp_i_i11_reg_1469;
wire   [63:0] grp_fu_773_p2;
reg   [63:0] tmp_7_3_reg_1475;
wire   [63:0] grp_fu_777_p2;
reg   [63:0] tmp_1_3_reg_1480;
wire   [63:0] grp_fu_781_p2;
reg   [63:0] tmp_6_4_reg_1485;
wire   [63:0] grp_fu_785_p2;
reg   [63:0] tmp_4_43_reg_1490;
wire   [63:0] grp_fu_967_p2;
reg   [63:0] tmp_4_5_reg_1495;
wire   [63:0] grp_fu_971_p2;
reg   [63:0] tmp_5_5_reg_1500;
wire   [63:0] grp_fu_975_p2;
reg   [63:0] tmp_8_5_reg_1505;
wire   [63:0] grp_fu_979_p2;
reg   [63:0] tmp_9_5_reg_1510;
wire   [63:0] grp_sin_or_cos_double_s_fu_639_ap_return;
reg   [63:0] tmp_i_i12_reg_1515;
wire   [63:0] grp_sin_or_cos_double_s_fu_658_ap_return;
reg   [63:0] tmp_i_i13_reg_1521;
wire   [63:0] grp_fu_789_p2;
reg   [63:0] tmp_7_4_reg_1527;
wire   [63:0] grp_fu_793_p2;
reg   [63:0] tmp_1_4_reg_1532;
wire   [63:0] grp_fu_797_p2;
reg   [63:0] tmp_6_5_reg_1537;
wire   [63:0] grp_fu_801_p2;
reg   [63:0] tmp_5_44_reg_1542;
wire   [63:0] grp_fu_983_p2;
reg   [63:0] tmp_4_6_reg_1547;
wire   [63:0] grp_fu_987_p2;
reg   [63:0] tmp_5_6_reg_1552;
wire   [63:0] grp_fu_991_p2;
reg   [63:0] tmp_8_6_reg_1557;
wire   [63:0] grp_fu_995_p2;
reg   [63:0] tmp_9_6_reg_1562;
wire   [63:0] grp_sin_or_cos_double_s_fu_677_ap_return;
reg   [63:0] tmp_i_i14_reg_1567;
wire   [63:0] grp_sin_or_cos_double_s_fu_696_ap_return;
reg   [63:0] tmp_i_i15_reg_1573;
wire   [63:0] grp_fu_805_p2;
reg   [63:0] tmp_7_5_reg_1579;
wire   [63:0] grp_fu_809_p2;
reg   [63:0] tmp_1_5_reg_1584;
wire   [63:0] grp_fu_813_p2;
reg   [63:0] tmp_6_6_reg_1589;
wire   [63:0] grp_fu_817_p2;
reg   [63:0] tmp_6_45_reg_1594;
wire   [63:0] grp_fu_999_p2;
reg   [63:0] tmp_4_7_reg_1599;
wire   [63:0] grp_fu_1003_p2;
reg   [63:0] tmp_5_7_reg_1604;
wire   [63:0] grp_fu_1007_p2;
reg   [63:0] tmp_8_7_reg_1609;
wire   [63:0] grp_fu_1011_p2;
reg   [63:0] tmp_9_7_reg_1614;
wire   [63:0] grp_fu_821_p2;
reg   [63:0] tmp_7_6_reg_1619;
wire   [63:0] grp_fu_825_p2;
reg   [63:0] tmp_1_6_reg_1624;
wire   [63:0] grp_fu_829_p2;
reg   [63:0] tmp_6_7_reg_1629;
wire   [63:0] grp_fu_833_p2;
reg   [63:0] tmp_7_46_reg_1634;
wire   [3:0] i_fu_1047_p2;
reg   [3:0] i_reg_1642;
wire    ap_CS_fsm_state81;
wire   [0:0] icmp_ln33_fu_1041_p2;
wire   [2:0] trunc_ln34_fu_1059_p1;
reg   [2:0] trunc_ln34_reg_1652;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg   [2:0] temp_real_address0;
reg    temp_real_ce0;
reg    temp_real_we0;
wire   [63:0] temp_real_q0;
reg   [2:0] temp_imag_address0;
reg    temp_imag_ce0;
reg    temp_imag_we0;
wire   [63:0] temp_imag_q0;
wire    grp_sin_or_cos_double_s_fu_411_ap_start;
wire    grp_sin_or_cos_double_s_fu_411_ap_done;
wire    grp_sin_or_cos_double_s_fu_411_ap_idle;
wire    grp_sin_or_cos_double_s_fu_411_ap_ready;
wire    grp_sin_or_cos_double_s_fu_411_do_cos;
wire    grp_sin_or_cos_double_s_fu_430_ap_start;
wire    grp_sin_or_cos_double_s_fu_430_ap_done;
wire    grp_sin_or_cos_double_s_fu_430_ap_idle;
wire    grp_sin_or_cos_double_s_fu_430_ap_ready;
wire    grp_sin_or_cos_double_s_fu_430_do_cos;
wire    grp_sin_or_cos_double_s_fu_449_ap_start;
wire    grp_sin_or_cos_double_s_fu_449_ap_done;
wire    grp_sin_or_cos_double_s_fu_449_ap_idle;
wire    grp_sin_or_cos_double_s_fu_449_ap_ready;
wire    grp_sin_or_cos_double_s_fu_449_do_cos;
wire    grp_sin_or_cos_double_s_fu_468_ap_start;
wire    grp_sin_or_cos_double_s_fu_468_ap_done;
wire    grp_sin_or_cos_double_s_fu_468_ap_idle;
wire    grp_sin_or_cos_double_s_fu_468_ap_ready;
wire    grp_sin_or_cos_double_s_fu_468_do_cos;
wire    grp_sin_or_cos_double_s_fu_487_ap_start;
wire    grp_sin_or_cos_double_s_fu_487_ap_done;
wire    grp_sin_or_cos_double_s_fu_487_ap_idle;
wire    grp_sin_or_cos_double_s_fu_487_ap_ready;
wire    grp_sin_or_cos_double_s_fu_487_do_cos;
wire    grp_sin_or_cos_double_s_fu_506_ap_start;
wire    grp_sin_or_cos_double_s_fu_506_ap_done;
wire    grp_sin_or_cos_double_s_fu_506_ap_idle;
wire    grp_sin_or_cos_double_s_fu_506_ap_ready;
wire    grp_sin_or_cos_double_s_fu_506_do_cos;
wire    grp_sin_or_cos_double_s_fu_525_ap_start;
wire    grp_sin_or_cos_double_s_fu_525_ap_done;
wire    grp_sin_or_cos_double_s_fu_525_ap_idle;
wire    grp_sin_or_cos_double_s_fu_525_ap_ready;
wire    grp_sin_or_cos_double_s_fu_525_do_cos;
wire    grp_sin_or_cos_double_s_fu_544_ap_start;
wire    grp_sin_or_cos_double_s_fu_544_ap_done;
wire    grp_sin_or_cos_double_s_fu_544_ap_idle;
wire    grp_sin_or_cos_double_s_fu_544_ap_ready;
wire    grp_sin_or_cos_double_s_fu_544_do_cos;
wire    grp_sin_or_cos_double_s_fu_563_ap_start;
wire    grp_sin_or_cos_double_s_fu_563_ap_done;
wire    grp_sin_or_cos_double_s_fu_563_ap_idle;
wire    grp_sin_or_cos_double_s_fu_563_ap_ready;
wire    grp_sin_or_cos_double_s_fu_563_do_cos;
wire    grp_sin_or_cos_double_s_fu_582_ap_start;
wire    grp_sin_or_cos_double_s_fu_582_ap_done;
wire    grp_sin_or_cos_double_s_fu_582_ap_idle;
wire    grp_sin_or_cos_double_s_fu_582_ap_ready;
wire    grp_sin_or_cos_double_s_fu_582_do_cos;
wire    grp_sin_or_cos_double_s_fu_601_ap_start;
wire    grp_sin_or_cos_double_s_fu_601_ap_done;
wire    grp_sin_or_cos_double_s_fu_601_ap_idle;
wire    grp_sin_or_cos_double_s_fu_601_ap_ready;
wire    grp_sin_or_cos_double_s_fu_601_do_cos;
wire    grp_sin_or_cos_double_s_fu_620_ap_start;
wire    grp_sin_or_cos_double_s_fu_620_ap_done;
wire    grp_sin_or_cos_double_s_fu_620_ap_idle;
wire    grp_sin_or_cos_double_s_fu_620_ap_ready;
wire    grp_sin_or_cos_double_s_fu_620_do_cos;
wire    grp_sin_or_cos_double_s_fu_639_ap_start;
wire    grp_sin_or_cos_double_s_fu_639_ap_done;
wire    grp_sin_or_cos_double_s_fu_639_ap_idle;
wire    grp_sin_or_cos_double_s_fu_639_ap_ready;
wire    grp_sin_or_cos_double_s_fu_639_do_cos;
wire    grp_sin_or_cos_double_s_fu_658_ap_start;
wire    grp_sin_or_cos_double_s_fu_658_ap_done;
wire    grp_sin_or_cos_double_s_fu_658_ap_idle;
wire    grp_sin_or_cos_double_s_fu_658_ap_ready;
wire    grp_sin_or_cos_double_s_fu_658_do_cos;
wire    grp_sin_or_cos_double_s_fu_677_ap_start;
wire    grp_sin_or_cos_double_s_fu_677_ap_done;
wire    grp_sin_or_cos_double_s_fu_677_ap_idle;
wire    grp_sin_or_cos_double_s_fu_677_ap_ready;
wire    grp_sin_or_cos_double_s_fu_677_do_cos;
wire    grp_sin_or_cos_double_s_fu_696_ap_start;
wire    grp_sin_or_cos_double_s_fu_696_ap_done;
wire    grp_sin_or_cos_double_s_fu_696_ap_idle;
wire    grp_sin_or_cos_double_s_fu_696_ap_ready;
wire    grp_sin_or_cos_double_s_fu_696_do_cos;
reg   [3:0] ap_phi_mux_i_0_phi_fu_392_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] i_1_reg_400;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state80;
reg    grp_sin_or_cos_double_s_fu_411_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_430_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_449_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_468_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_487_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_506_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_525_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_544_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_563_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_582_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_601_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_620_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_639_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_658_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_677_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_696_ap_start_reg;
wire   [63:0] zext_ln18_fu_1035_p1;
wire   [63:0] zext_ln34_fu_1053_p1;
wire    ap_CS_fsm_state82;
wire   [63:0] grp_fu_837_p2;
wire   [63:0] grp_fu_842_p2;
wire   [31:0] grp_fu_1015_p0;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 grp_sin_or_cos_double_s_fu_411_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_430_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_449_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_468_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_487_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_506_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_525_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_544_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_563_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_582_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_601_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_620_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_639_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_658_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_677_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_696_ap_start_reg = 1'b0;
end

dft_temp_real #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
temp_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_real_address0),
    .ce0(temp_real_ce0),
    .we0(temp_real_we0),
    .d0(grp_fu_837_p2),
    .q0(temp_real_q0)
);

dft_temp_real #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
temp_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_imag_address0),
    .ce0(temp_imag_ce0),
    .we0(temp_imag_we0),
    .d0(grp_fu_842_p2),
    .q0(temp_imag_q0)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_411(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_411_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_411_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_411_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_411_ap_ready),
    .t_in(x_assign_reg_1191),
    .do_cos(grp_sin_or_cos_double_s_fu_411_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_411_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_430(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_430_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_430_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_430_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_430_ap_ready),
    .t_in(x_assign_reg_1191),
    .do_cos(grp_sin_or_cos_double_s_fu_430_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_430_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_449(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_449_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_449_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_449_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_449_ap_ready),
    .t_in(w_reg_1178_pp0_iter18_reg),
    .do_cos(grp_sin_or_cos_double_s_fu_449_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_449_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_468(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_468_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_468_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_468_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_468_ap_ready),
    .t_in(w_reg_1178_pp0_iter18_reg),
    .do_cos(grp_sin_or_cos_double_s_fu_468_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_468_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_487(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_487_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_487_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_487_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_487_ap_ready),
    .t_in(x_assign_2_reg_1197),
    .do_cos(grp_sin_or_cos_double_s_fu_487_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_487_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_506(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_506_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_506_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_506_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_506_ap_ready),
    .t_in(x_assign_2_reg_1197),
    .do_cos(grp_sin_or_cos_double_s_fu_506_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_506_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_525(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_525_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_525_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_525_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_525_ap_ready),
    .t_in(x_assign_3_reg_1215),
    .do_cos(grp_sin_or_cos_double_s_fu_525_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_525_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_544(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_544_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_544_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_544_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_544_ap_ready),
    .t_in(x_assign_3_reg_1215),
    .do_cos(grp_sin_or_cos_double_s_fu_544_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_544_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_563(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_563_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_563_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_563_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_563_ap_ready),
    .t_in(x_assign_4_reg_1253),
    .do_cos(grp_sin_or_cos_double_s_fu_563_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_563_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_582(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_582_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_582_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_582_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_582_ap_ready),
    .t_in(x_assign_4_reg_1253),
    .do_cos(grp_sin_or_cos_double_s_fu_582_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_582_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_601(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_601_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_601_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_601_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_601_ap_ready),
    .t_in(x_assign_5_reg_1301),
    .do_cos(grp_sin_or_cos_double_s_fu_601_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_601_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_620(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_620_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_620_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_620_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_620_ap_ready),
    .t_in(x_assign_5_reg_1301),
    .do_cos(grp_sin_or_cos_double_s_fu_620_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_620_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_639(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_639_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_639_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_639_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_639_ap_ready),
    .t_in(x_assign_6_reg_1359),
    .do_cos(grp_sin_or_cos_double_s_fu_639_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_639_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_658(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_658_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_658_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_658_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_658_ap_ready),
    .t_in(x_assign_6_reg_1359),
    .do_cos(grp_sin_or_cos_double_s_fu_658_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_658_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_677(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_677_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_677_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_677_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_677_ap_ready),
    .t_in(x_assign_7_reg_1417),
    .do_cos(grp_sin_or_cos_double_s_fu_677_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_677_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_696(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_696_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_696_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_696_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_696_ap_ready),
    .t_in(x_assign_7_reg_1417),
    .do_cos(grp_sin_or_cos_double_s_fu_696_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_696_ap_return)
);

dft_dsub_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dsub_64ns_64nkbM_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_1221),
    .din1(tmp_5_reg_1226),
    .ce(1'b1),
    .dout(grp_fu_715_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_reg_1231),
    .din1(tmp_9_reg_1236),
    .ce(1'b1),
    .dout(grp_fu_719_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_1259),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_723_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_1264),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_728_p2)
);

dft_dsub_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dsub_64ns_64nkbM_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_1_reg_1269),
    .din1(tmp_5_1_reg_1274),
    .ce(1'b1),
    .dout(grp_fu_733_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_1_reg_1279),
    .din1(tmp_9_1_reg_1284),
    .ce(1'b1),
    .dout(grp_fu_737_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_1307),
    .din1(tmp_6_1_reg_1317),
    .ce(1'b1),
    .dout(grp_fu_741_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_reg_1312),
    .din1(tmp_1_41_reg_1322),
    .ce(1'b1),
    .dout(grp_fu_745_p2)
);

dft_dsub_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dsub_64ns_64nkbM_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_2_reg_1327),
    .din1(tmp_5_2_reg_1332),
    .ce(1'b1),
    .dout(grp_fu_749_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_2_reg_1337),
    .din1(tmp_9_2_reg_1342),
    .ce(1'b1),
    .dout(grp_fu_753_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_1_reg_1365),
    .din1(tmp_6_2_reg_1375),
    .ce(1'b1),
    .dout(grp_fu_757_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_1_reg_1370),
    .din1(tmp_2_42_reg_1380),
    .ce(1'b1),
    .dout(grp_fu_761_p2)
);

dft_dsub_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dsub_64ns_64nkbM_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_3_reg_1385),
    .din1(tmp_5_3_reg_1390),
    .ce(1'b1),
    .dout(grp_fu_765_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_3_reg_1395),
    .din1(tmp_9_3_reg_1400),
    .ce(1'b1),
    .dout(grp_fu_769_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_2_reg_1423),
    .din1(tmp_6_3_reg_1433),
    .ce(1'b1),
    .dout(grp_fu_773_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_2_reg_1428),
    .din1(tmp_3_reg_1438),
    .ce(1'b1),
    .dout(grp_fu_777_p2)
);

dft_dsub_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dsub_64ns_64nkbM_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_4_reg_1443),
    .din1(tmp_5_4_reg_1448),
    .ce(1'b1),
    .dout(grp_fu_781_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_4_reg_1453),
    .din1(tmp_9_4_reg_1458),
    .ce(1'b1),
    .dout(grp_fu_785_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_3_reg_1475),
    .din1(tmp_6_4_reg_1485),
    .ce(1'b1),
    .dout(grp_fu_789_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_3_reg_1480),
    .din1(tmp_4_43_reg_1490),
    .ce(1'b1),
    .dout(grp_fu_793_p2)
);

dft_dsub_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dsub_64ns_64nkbM_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_5_reg_1495),
    .din1(tmp_5_5_reg_1500),
    .ce(1'b1),
    .dout(grp_fu_797_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_5_reg_1505),
    .din1(tmp_9_5_reg_1510),
    .ce(1'b1),
    .dout(grp_fu_801_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_4_reg_1527),
    .din1(tmp_6_5_reg_1537),
    .ce(1'b1),
    .dout(grp_fu_805_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_4_reg_1532),
    .din1(tmp_5_44_reg_1542),
    .ce(1'b1),
    .dout(grp_fu_809_p2)
);

dft_dsub_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dsub_64ns_64nkbM_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_6_reg_1547),
    .din1(tmp_5_6_reg_1552),
    .ce(1'b1),
    .dout(grp_fu_813_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_6_reg_1557),
    .din1(tmp_9_6_reg_1562),
    .ce(1'b1),
    .dout(grp_fu_817_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_5_reg_1579),
    .din1(tmp_6_6_reg_1589),
    .ce(1'b1),
    .dout(grp_fu_821_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_5_reg_1584),
    .din1(tmp_6_45_reg_1594),
    .ce(1'b1),
    .dout(grp_fu_825_p2)
);

dft_dsub_64ns_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dsub_64ns_64nkbM_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_7_reg_1599),
    .din1(tmp_5_7_reg_1604),
    .ce(1'b1),
    .dout(grp_fu_829_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_7_reg_1609),
    .din1(tmp_9_7_reg_1614),
    .ce(1'b1),
    .dout(grp_fu_833_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_6_reg_1619),
    .din1(tmp_6_7_reg_1629),
    .ce(1'b1),
    .dout(grp_fu_837_p2)
);

dft_dadd_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dadd_64ns_64nlbW_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_6_reg_1624),
    .din1(tmp_7_46_reg_1634),
    .ce(1'b1),
    .dout(grp_fu_842_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_1173),
    .din1(64'd4605249457297303070),
    .ce(1'b1),
    .dout(grp_fu_847_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_reg_1178),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_852_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_reg_1178_pp0_iter18_reg),
    .din1(64'd4611686018427387904),
    .ce(1'b1),
    .dout(grp_fu_857_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_reg_1178_pp0_iter23_reg),
    .din1(64'd4613937818241073152),
    .ce(1'b1),
    .dout(grp_fu_862_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_0_read_reg_1063),
    .din1(tmp_i_i_reg_1203),
    .ce(1'b1),
    .dout(grp_fu_867_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_0_read_reg_1069),
    .din1(tmp_i_i1_reg_1209),
    .ce(1'b1),
    .dout(grp_fu_871_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_0_read_reg_1063),
    .din1(tmp_i_i1_reg_1209),
    .ce(1'b1),
    .dout(grp_fu_875_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_0_read_reg_1069),
    .din1(tmp_i_i_reg_1203),
    .ce(1'b1),
    .dout(grp_fu_879_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_reg_1178_pp0_iter28_reg),
    .din1(64'd4616189618054758400),
    .ce(1'b1),
    .dout(grp_fu_883_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_1_read_reg_1075),
    .din1(tmp_i_i2_reg_1241),
    .ce(1'b1),
    .dout(grp_fu_888_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_1_read_reg_1081),
    .din1(tmp_i_i3_reg_1247),
    .ce(1'b1),
    .dout(grp_fu_892_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_1_read_reg_1075),
    .din1(tmp_i_i3_reg_1247),
    .ce(1'b1),
    .dout(grp_fu_896_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_1_read_reg_1081),
    .din1(tmp_i_i2_reg_1241),
    .ce(1'b1),
    .dout(grp_fu_900_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_reg_1178_pp0_iter33_reg),
    .din1(64'd4617315517961601024),
    .ce(1'b1),
    .dout(grp_fu_904_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_2_read_reg_1087),
    .din1(tmp_i_i4_reg_1289),
    .ce(1'b1),
    .dout(grp_fu_909_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_2_read_reg_1093),
    .din1(tmp_i_i5_reg_1295),
    .ce(1'b1),
    .dout(grp_fu_913_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_2_read_reg_1087),
    .din1(tmp_i_i5_reg_1295),
    .ce(1'b1),
    .dout(grp_fu_917_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_2_read_reg_1093),
    .din1(tmp_i_i4_reg_1289),
    .ce(1'b1),
    .dout(grp_fu_921_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_reg_1178_pp0_iter38_reg),
    .din1(64'd4618441417868443648),
    .ce(1'b1),
    .dout(grp_fu_925_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_3_read_reg_1099),
    .din1(tmp_i_i6_reg_1347),
    .ce(1'b1),
    .dout(grp_fu_930_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_3_read_reg_1105),
    .din1(tmp_i_i7_reg_1353),
    .ce(1'b1),
    .dout(grp_fu_934_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_3_read_reg_1099),
    .din1(tmp_i_i7_reg_1353),
    .ce(1'b1),
    .dout(grp_fu_938_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_3_read_reg_1105),
    .din1(tmp_i_i6_reg_1347),
    .ce(1'b1),
    .dout(grp_fu_942_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_reg_1178_pp0_iter43_reg),
    .din1(64'd4619567317775286272),
    .ce(1'b1),
    .dout(grp_fu_946_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_4_read_reg_1111),
    .din1(tmp_i_i8_reg_1405),
    .ce(1'b1),
    .dout(grp_fu_951_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_4_read_reg_1117),
    .din1(tmp_i_i9_reg_1411),
    .ce(1'b1),
    .dout(grp_fu_955_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_4_read_reg_1111),
    .din1(tmp_i_i9_reg_1411),
    .ce(1'b1),
    .dout(grp_fu_959_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_4_read_reg_1117),
    .din1(tmp_i_i8_reg_1405),
    .ce(1'b1),
    .dout(grp_fu_963_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_5_read_reg_1123),
    .din1(tmp_i_i10_reg_1463),
    .ce(1'b1),
    .dout(grp_fu_967_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_5_read_reg_1129),
    .din1(tmp_i_i11_reg_1469),
    .ce(1'b1),
    .dout(grp_fu_971_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_5_read_reg_1123),
    .din1(tmp_i_i11_reg_1469),
    .ce(1'b1),
    .dout(grp_fu_975_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_5_read_reg_1129),
    .din1(tmp_i_i10_reg_1463),
    .ce(1'b1),
    .dout(grp_fu_979_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_6_read_reg_1135),
    .din1(tmp_i_i12_reg_1515),
    .ce(1'b1),
    .dout(grp_fu_983_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_6_read_reg_1141),
    .din1(tmp_i_i13_reg_1521),
    .ce(1'b1),
    .dout(grp_fu_987_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_6_read_reg_1135),
    .din1(tmp_i_i13_reg_1521),
    .ce(1'b1),
    .dout(grp_fu_991_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_6_read_reg_1141),
    .din1(tmp_i_i12_reg_1515),
    .ce(1'b1),
    .dout(grp_fu_995_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_7_read_reg_1147),
    .din1(tmp_i_i14_reg_1567),
    .ce(1'b1),
    .dout(grp_fu_999_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_7_read_reg_1153),
    .din1(tmp_i_i15_reg_1573),
    .ce(1'b1),
    .dout(grp_fu_1003_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_real_7_read_reg_1147),
    .din1(tmp_i_i15_reg_1573),
    .ce(1'b1),
    .dout(grp_fu_1007_p2)
);

dft_dmul_64ns_64nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nmb6_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sample_imag_7_read_reg_1153),
    .din1(tmp_i_i14_reg_1567),
    .ce(1'b1),
    .dout(grp_fu_1011_p2)
);

dft_sitodp_32ns_6ncg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
dft_sitodp_32ns_6ncg_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1015_p0),
    .ce(1'b1),
    .dout(grp_fu_1015_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter77 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_411_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_411_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_411_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_411_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_430_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_430_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_430_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_430_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_449_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter17_reg == 1'd0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_449_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_449_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_449_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_468_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter17_reg == 1'd0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_468_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_468_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_468_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_487_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter22_reg == 1'd0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_487_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_487_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_487_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_506_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter22_reg == 1'd0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_506_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_506_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_506_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_525_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter27_reg == 1'd0) & (ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_525_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_525_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_525_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_544_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter27_reg == 1'd0) & (ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_544_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_544_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_544_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_563_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter32_reg == 1'd0) & (ap_enable_reg_pp0_iter33 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_563_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_563_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_563_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_582_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter32_reg == 1'd0) & (ap_enable_reg_pp0_iter33 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_582_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_582_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_582_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_601_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_601_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_601_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_601_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_620_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_620_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_620_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_620_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_639_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter42_reg == 1'd0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_639_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_639_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_639_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_658_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter42_reg == 1'd0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_658_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_658_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_658_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_677_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter47_reg == 1'd0) & (ap_enable_reg_pp0_iter48 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_677_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_677_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_677_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_696_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln16_reg_1159_pp0_iter47_reg == 1'd0) & (ap_enable_reg_pp0_iter48 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_696_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_696_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_696_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_388 <= i_2_reg_1163;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_388 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        i_1_reg_400 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        i_1_reg_400 <= i_reg_1642;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_0_reg_388_pp0_iter10_reg <= i_0_reg_388_pp0_iter9_reg;
        i_0_reg_388_pp0_iter11_reg <= i_0_reg_388_pp0_iter10_reg;
        i_0_reg_388_pp0_iter12_reg <= i_0_reg_388_pp0_iter11_reg;
        i_0_reg_388_pp0_iter13_reg <= i_0_reg_388_pp0_iter12_reg;
        i_0_reg_388_pp0_iter14_reg <= i_0_reg_388_pp0_iter13_reg;
        i_0_reg_388_pp0_iter15_reg <= i_0_reg_388_pp0_iter14_reg;
        i_0_reg_388_pp0_iter16_reg <= i_0_reg_388_pp0_iter15_reg;
        i_0_reg_388_pp0_iter17_reg <= i_0_reg_388_pp0_iter16_reg;
        i_0_reg_388_pp0_iter18_reg <= i_0_reg_388_pp0_iter17_reg;
        i_0_reg_388_pp0_iter19_reg <= i_0_reg_388_pp0_iter18_reg;
        i_0_reg_388_pp0_iter20_reg <= i_0_reg_388_pp0_iter19_reg;
        i_0_reg_388_pp0_iter21_reg <= i_0_reg_388_pp0_iter20_reg;
        i_0_reg_388_pp0_iter22_reg <= i_0_reg_388_pp0_iter21_reg;
        i_0_reg_388_pp0_iter23_reg <= i_0_reg_388_pp0_iter22_reg;
        i_0_reg_388_pp0_iter24_reg <= i_0_reg_388_pp0_iter23_reg;
        i_0_reg_388_pp0_iter25_reg <= i_0_reg_388_pp0_iter24_reg;
        i_0_reg_388_pp0_iter26_reg <= i_0_reg_388_pp0_iter25_reg;
        i_0_reg_388_pp0_iter27_reg <= i_0_reg_388_pp0_iter26_reg;
        i_0_reg_388_pp0_iter28_reg <= i_0_reg_388_pp0_iter27_reg;
        i_0_reg_388_pp0_iter29_reg <= i_0_reg_388_pp0_iter28_reg;
        i_0_reg_388_pp0_iter2_reg <= i_0_reg_388_pp0_iter1_reg;
        i_0_reg_388_pp0_iter30_reg <= i_0_reg_388_pp0_iter29_reg;
        i_0_reg_388_pp0_iter31_reg <= i_0_reg_388_pp0_iter30_reg;
        i_0_reg_388_pp0_iter32_reg <= i_0_reg_388_pp0_iter31_reg;
        i_0_reg_388_pp0_iter33_reg <= i_0_reg_388_pp0_iter32_reg;
        i_0_reg_388_pp0_iter34_reg <= i_0_reg_388_pp0_iter33_reg;
        i_0_reg_388_pp0_iter35_reg <= i_0_reg_388_pp0_iter34_reg;
        i_0_reg_388_pp0_iter36_reg <= i_0_reg_388_pp0_iter35_reg;
        i_0_reg_388_pp0_iter37_reg <= i_0_reg_388_pp0_iter36_reg;
        i_0_reg_388_pp0_iter38_reg <= i_0_reg_388_pp0_iter37_reg;
        i_0_reg_388_pp0_iter39_reg <= i_0_reg_388_pp0_iter38_reg;
        i_0_reg_388_pp0_iter3_reg <= i_0_reg_388_pp0_iter2_reg;
        i_0_reg_388_pp0_iter40_reg <= i_0_reg_388_pp0_iter39_reg;
        i_0_reg_388_pp0_iter41_reg <= i_0_reg_388_pp0_iter40_reg;
        i_0_reg_388_pp0_iter42_reg <= i_0_reg_388_pp0_iter41_reg;
        i_0_reg_388_pp0_iter43_reg <= i_0_reg_388_pp0_iter42_reg;
        i_0_reg_388_pp0_iter44_reg <= i_0_reg_388_pp0_iter43_reg;
        i_0_reg_388_pp0_iter45_reg <= i_0_reg_388_pp0_iter44_reg;
        i_0_reg_388_pp0_iter46_reg <= i_0_reg_388_pp0_iter45_reg;
        i_0_reg_388_pp0_iter47_reg <= i_0_reg_388_pp0_iter46_reg;
        i_0_reg_388_pp0_iter48_reg <= i_0_reg_388_pp0_iter47_reg;
        i_0_reg_388_pp0_iter49_reg <= i_0_reg_388_pp0_iter48_reg;
        i_0_reg_388_pp0_iter4_reg <= i_0_reg_388_pp0_iter3_reg;
        i_0_reg_388_pp0_iter50_reg <= i_0_reg_388_pp0_iter49_reg;
        i_0_reg_388_pp0_iter51_reg <= i_0_reg_388_pp0_iter50_reg;
        i_0_reg_388_pp0_iter52_reg <= i_0_reg_388_pp0_iter51_reg;
        i_0_reg_388_pp0_iter53_reg <= i_0_reg_388_pp0_iter52_reg;
        i_0_reg_388_pp0_iter54_reg <= i_0_reg_388_pp0_iter53_reg;
        i_0_reg_388_pp0_iter55_reg <= i_0_reg_388_pp0_iter54_reg;
        i_0_reg_388_pp0_iter56_reg <= i_0_reg_388_pp0_iter55_reg;
        i_0_reg_388_pp0_iter57_reg <= i_0_reg_388_pp0_iter56_reg;
        i_0_reg_388_pp0_iter58_reg <= i_0_reg_388_pp0_iter57_reg;
        i_0_reg_388_pp0_iter59_reg <= i_0_reg_388_pp0_iter58_reg;
        i_0_reg_388_pp0_iter5_reg <= i_0_reg_388_pp0_iter4_reg;
        i_0_reg_388_pp0_iter60_reg <= i_0_reg_388_pp0_iter59_reg;
        i_0_reg_388_pp0_iter61_reg <= i_0_reg_388_pp0_iter60_reg;
        i_0_reg_388_pp0_iter62_reg <= i_0_reg_388_pp0_iter61_reg;
        i_0_reg_388_pp0_iter63_reg <= i_0_reg_388_pp0_iter62_reg;
        i_0_reg_388_pp0_iter64_reg <= i_0_reg_388_pp0_iter63_reg;
        i_0_reg_388_pp0_iter65_reg <= i_0_reg_388_pp0_iter64_reg;
        i_0_reg_388_pp0_iter66_reg <= i_0_reg_388_pp0_iter65_reg;
        i_0_reg_388_pp0_iter67_reg <= i_0_reg_388_pp0_iter66_reg;
        i_0_reg_388_pp0_iter68_reg <= i_0_reg_388_pp0_iter67_reg;
        i_0_reg_388_pp0_iter69_reg <= i_0_reg_388_pp0_iter68_reg;
        i_0_reg_388_pp0_iter6_reg <= i_0_reg_388_pp0_iter5_reg;
        i_0_reg_388_pp0_iter70_reg <= i_0_reg_388_pp0_iter69_reg;
        i_0_reg_388_pp0_iter71_reg <= i_0_reg_388_pp0_iter70_reg;
        i_0_reg_388_pp0_iter72_reg <= i_0_reg_388_pp0_iter71_reg;
        i_0_reg_388_pp0_iter73_reg <= i_0_reg_388_pp0_iter72_reg;
        i_0_reg_388_pp0_iter74_reg <= i_0_reg_388_pp0_iter73_reg;
        i_0_reg_388_pp0_iter75_reg <= i_0_reg_388_pp0_iter74_reg;
        i_0_reg_388_pp0_iter76_reg <= i_0_reg_388_pp0_iter75_reg;
        i_0_reg_388_pp0_iter7_reg <= i_0_reg_388_pp0_iter6_reg;
        i_0_reg_388_pp0_iter8_reg <= i_0_reg_388_pp0_iter7_reg;
        i_0_reg_388_pp0_iter9_reg <= i_0_reg_388_pp0_iter8_reg;
        icmp_ln16_reg_1159_pp0_iter10_reg <= icmp_ln16_reg_1159_pp0_iter9_reg;
        icmp_ln16_reg_1159_pp0_iter11_reg <= icmp_ln16_reg_1159_pp0_iter10_reg;
        icmp_ln16_reg_1159_pp0_iter12_reg <= icmp_ln16_reg_1159_pp0_iter11_reg;
        icmp_ln16_reg_1159_pp0_iter13_reg <= icmp_ln16_reg_1159_pp0_iter12_reg;
        icmp_ln16_reg_1159_pp0_iter14_reg <= icmp_ln16_reg_1159_pp0_iter13_reg;
        icmp_ln16_reg_1159_pp0_iter15_reg <= icmp_ln16_reg_1159_pp0_iter14_reg;
        icmp_ln16_reg_1159_pp0_iter16_reg <= icmp_ln16_reg_1159_pp0_iter15_reg;
        icmp_ln16_reg_1159_pp0_iter17_reg <= icmp_ln16_reg_1159_pp0_iter16_reg;
        icmp_ln16_reg_1159_pp0_iter18_reg <= icmp_ln16_reg_1159_pp0_iter17_reg;
        icmp_ln16_reg_1159_pp0_iter19_reg <= icmp_ln16_reg_1159_pp0_iter18_reg;
        icmp_ln16_reg_1159_pp0_iter20_reg <= icmp_ln16_reg_1159_pp0_iter19_reg;
        icmp_ln16_reg_1159_pp0_iter21_reg <= icmp_ln16_reg_1159_pp0_iter20_reg;
        icmp_ln16_reg_1159_pp0_iter22_reg <= icmp_ln16_reg_1159_pp0_iter21_reg;
        icmp_ln16_reg_1159_pp0_iter23_reg <= icmp_ln16_reg_1159_pp0_iter22_reg;
        icmp_ln16_reg_1159_pp0_iter24_reg <= icmp_ln16_reg_1159_pp0_iter23_reg;
        icmp_ln16_reg_1159_pp0_iter25_reg <= icmp_ln16_reg_1159_pp0_iter24_reg;
        icmp_ln16_reg_1159_pp0_iter26_reg <= icmp_ln16_reg_1159_pp0_iter25_reg;
        icmp_ln16_reg_1159_pp0_iter27_reg <= icmp_ln16_reg_1159_pp0_iter26_reg;
        icmp_ln16_reg_1159_pp0_iter28_reg <= icmp_ln16_reg_1159_pp0_iter27_reg;
        icmp_ln16_reg_1159_pp0_iter29_reg <= icmp_ln16_reg_1159_pp0_iter28_reg;
        icmp_ln16_reg_1159_pp0_iter2_reg <= icmp_ln16_reg_1159_pp0_iter1_reg;
        icmp_ln16_reg_1159_pp0_iter30_reg <= icmp_ln16_reg_1159_pp0_iter29_reg;
        icmp_ln16_reg_1159_pp0_iter31_reg <= icmp_ln16_reg_1159_pp0_iter30_reg;
        icmp_ln16_reg_1159_pp0_iter32_reg <= icmp_ln16_reg_1159_pp0_iter31_reg;
        icmp_ln16_reg_1159_pp0_iter33_reg <= icmp_ln16_reg_1159_pp0_iter32_reg;
        icmp_ln16_reg_1159_pp0_iter34_reg <= icmp_ln16_reg_1159_pp0_iter33_reg;
        icmp_ln16_reg_1159_pp0_iter35_reg <= icmp_ln16_reg_1159_pp0_iter34_reg;
        icmp_ln16_reg_1159_pp0_iter36_reg <= icmp_ln16_reg_1159_pp0_iter35_reg;
        icmp_ln16_reg_1159_pp0_iter37_reg <= icmp_ln16_reg_1159_pp0_iter36_reg;
        icmp_ln16_reg_1159_pp0_iter38_reg <= icmp_ln16_reg_1159_pp0_iter37_reg;
        icmp_ln16_reg_1159_pp0_iter39_reg <= icmp_ln16_reg_1159_pp0_iter38_reg;
        icmp_ln16_reg_1159_pp0_iter3_reg <= icmp_ln16_reg_1159_pp0_iter2_reg;
        icmp_ln16_reg_1159_pp0_iter40_reg <= icmp_ln16_reg_1159_pp0_iter39_reg;
        icmp_ln16_reg_1159_pp0_iter41_reg <= icmp_ln16_reg_1159_pp0_iter40_reg;
        icmp_ln16_reg_1159_pp0_iter42_reg <= icmp_ln16_reg_1159_pp0_iter41_reg;
        icmp_ln16_reg_1159_pp0_iter43_reg <= icmp_ln16_reg_1159_pp0_iter42_reg;
        icmp_ln16_reg_1159_pp0_iter44_reg <= icmp_ln16_reg_1159_pp0_iter43_reg;
        icmp_ln16_reg_1159_pp0_iter45_reg <= icmp_ln16_reg_1159_pp0_iter44_reg;
        icmp_ln16_reg_1159_pp0_iter46_reg <= icmp_ln16_reg_1159_pp0_iter45_reg;
        icmp_ln16_reg_1159_pp0_iter47_reg <= icmp_ln16_reg_1159_pp0_iter46_reg;
        icmp_ln16_reg_1159_pp0_iter48_reg <= icmp_ln16_reg_1159_pp0_iter47_reg;
        icmp_ln16_reg_1159_pp0_iter49_reg <= icmp_ln16_reg_1159_pp0_iter48_reg;
        icmp_ln16_reg_1159_pp0_iter4_reg <= icmp_ln16_reg_1159_pp0_iter3_reg;
        icmp_ln16_reg_1159_pp0_iter50_reg <= icmp_ln16_reg_1159_pp0_iter49_reg;
        icmp_ln16_reg_1159_pp0_iter51_reg <= icmp_ln16_reg_1159_pp0_iter50_reg;
        icmp_ln16_reg_1159_pp0_iter52_reg <= icmp_ln16_reg_1159_pp0_iter51_reg;
        icmp_ln16_reg_1159_pp0_iter53_reg <= icmp_ln16_reg_1159_pp0_iter52_reg;
        icmp_ln16_reg_1159_pp0_iter54_reg <= icmp_ln16_reg_1159_pp0_iter53_reg;
        icmp_ln16_reg_1159_pp0_iter55_reg <= icmp_ln16_reg_1159_pp0_iter54_reg;
        icmp_ln16_reg_1159_pp0_iter56_reg <= icmp_ln16_reg_1159_pp0_iter55_reg;
        icmp_ln16_reg_1159_pp0_iter57_reg <= icmp_ln16_reg_1159_pp0_iter56_reg;
        icmp_ln16_reg_1159_pp0_iter58_reg <= icmp_ln16_reg_1159_pp0_iter57_reg;
        icmp_ln16_reg_1159_pp0_iter59_reg <= icmp_ln16_reg_1159_pp0_iter58_reg;
        icmp_ln16_reg_1159_pp0_iter5_reg <= icmp_ln16_reg_1159_pp0_iter4_reg;
        icmp_ln16_reg_1159_pp0_iter60_reg <= icmp_ln16_reg_1159_pp0_iter59_reg;
        icmp_ln16_reg_1159_pp0_iter61_reg <= icmp_ln16_reg_1159_pp0_iter60_reg;
        icmp_ln16_reg_1159_pp0_iter62_reg <= icmp_ln16_reg_1159_pp0_iter61_reg;
        icmp_ln16_reg_1159_pp0_iter63_reg <= icmp_ln16_reg_1159_pp0_iter62_reg;
        icmp_ln16_reg_1159_pp0_iter64_reg <= icmp_ln16_reg_1159_pp0_iter63_reg;
        icmp_ln16_reg_1159_pp0_iter65_reg <= icmp_ln16_reg_1159_pp0_iter64_reg;
        icmp_ln16_reg_1159_pp0_iter66_reg <= icmp_ln16_reg_1159_pp0_iter65_reg;
        icmp_ln16_reg_1159_pp0_iter67_reg <= icmp_ln16_reg_1159_pp0_iter66_reg;
        icmp_ln16_reg_1159_pp0_iter68_reg <= icmp_ln16_reg_1159_pp0_iter67_reg;
        icmp_ln16_reg_1159_pp0_iter69_reg <= icmp_ln16_reg_1159_pp0_iter68_reg;
        icmp_ln16_reg_1159_pp0_iter6_reg <= icmp_ln16_reg_1159_pp0_iter5_reg;
        icmp_ln16_reg_1159_pp0_iter70_reg <= icmp_ln16_reg_1159_pp0_iter69_reg;
        icmp_ln16_reg_1159_pp0_iter71_reg <= icmp_ln16_reg_1159_pp0_iter70_reg;
        icmp_ln16_reg_1159_pp0_iter72_reg <= icmp_ln16_reg_1159_pp0_iter71_reg;
        icmp_ln16_reg_1159_pp0_iter73_reg <= icmp_ln16_reg_1159_pp0_iter72_reg;
        icmp_ln16_reg_1159_pp0_iter74_reg <= icmp_ln16_reg_1159_pp0_iter73_reg;
        icmp_ln16_reg_1159_pp0_iter75_reg <= icmp_ln16_reg_1159_pp0_iter74_reg;
        icmp_ln16_reg_1159_pp0_iter76_reg <= icmp_ln16_reg_1159_pp0_iter75_reg;
        icmp_ln16_reg_1159_pp0_iter7_reg <= icmp_ln16_reg_1159_pp0_iter6_reg;
        icmp_ln16_reg_1159_pp0_iter8_reg <= icmp_ln16_reg_1159_pp0_iter7_reg;
        icmp_ln16_reg_1159_pp0_iter9_reg <= icmp_ln16_reg_1159_pp0_iter8_reg;
        w_reg_1178_pp0_iter10_reg <= w_reg_1178_pp0_iter9_reg;
        w_reg_1178_pp0_iter11_reg <= w_reg_1178_pp0_iter10_reg;
        w_reg_1178_pp0_iter12_reg <= w_reg_1178_pp0_iter11_reg;
        w_reg_1178_pp0_iter13_reg <= w_reg_1178_pp0_iter12_reg;
        w_reg_1178_pp0_iter14_reg <= w_reg_1178_pp0_iter13_reg;
        w_reg_1178_pp0_iter15_reg <= w_reg_1178_pp0_iter14_reg;
        w_reg_1178_pp0_iter16_reg <= w_reg_1178_pp0_iter15_reg;
        w_reg_1178_pp0_iter17_reg <= w_reg_1178_pp0_iter16_reg;
        w_reg_1178_pp0_iter18_reg <= w_reg_1178_pp0_iter17_reg;
        w_reg_1178_pp0_iter19_reg <= w_reg_1178_pp0_iter18_reg;
        w_reg_1178_pp0_iter20_reg <= w_reg_1178_pp0_iter19_reg;
        w_reg_1178_pp0_iter21_reg <= w_reg_1178_pp0_iter20_reg;
        w_reg_1178_pp0_iter22_reg <= w_reg_1178_pp0_iter21_reg;
        w_reg_1178_pp0_iter23_reg <= w_reg_1178_pp0_iter22_reg;
        w_reg_1178_pp0_iter24_reg <= w_reg_1178_pp0_iter23_reg;
        w_reg_1178_pp0_iter25_reg <= w_reg_1178_pp0_iter24_reg;
        w_reg_1178_pp0_iter26_reg <= w_reg_1178_pp0_iter25_reg;
        w_reg_1178_pp0_iter27_reg <= w_reg_1178_pp0_iter26_reg;
        w_reg_1178_pp0_iter28_reg <= w_reg_1178_pp0_iter27_reg;
        w_reg_1178_pp0_iter29_reg <= w_reg_1178_pp0_iter28_reg;
        w_reg_1178_pp0_iter30_reg <= w_reg_1178_pp0_iter29_reg;
        w_reg_1178_pp0_iter31_reg <= w_reg_1178_pp0_iter30_reg;
        w_reg_1178_pp0_iter32_reg <= w_reg_1178_pp0_iter31_reg;
        w_reg_1178_pp0_iter33_reg <= w_reg_1178_pp0_iter32_reg;
        w_reg_1178_pp0_iter34_reg <= w_reg_1178_pp0_iter33_reg;
        w_reg_1178_pp0_iter35_reg <= w_reg_1178_pp0_iter34_reg;
        w_reg_1178_pp0_iter36_reg <= w_reg_1178_pp0_iter35_reg;
        w_reg_1178_pp0_iter37_reg <= w_reg_1178_pp0_iter36_reg;
        w_reg_1178_pp0_iter38_reg <= w_reg_1178_pp0_iter37_reg;
        w_reg_1178_pp0_iter39_reg <= w_reg_1178_pp0_iter38_reg;
        w_reg_1178_pp0_iter40_reg <= w_reg_1178_pp0_iter39_reg;
        w_reg_1178_pp0_iter41_reg <= w_reg_1178_pp0_iter40_reg;
        w_reg_1178_pp0_iter42_reg <= w_reg_1178_pp0_iter41_reg;
        w_reg_1178_pp0_iter43_reg <= w_reg_1178_pp0_iter42_reg;
        w_reg_1178_pp0_iter9_reg <= w_reg_1178;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_388_pp0_iter1_reg <= i_0_reg_388;
        icmp_ln16_reg_1159 <= icmp_ln16_fu_1018_p2;
        icmp_ln16_reg_1159_pp0_iter1_reg <= icmp_ln16_reg_1159;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_2_reg_1163 <= i_2_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_reg_1642 <= i_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        sample_imag_0_read_reg_1069 <= sample_imag_0_i;
        sample_imag_1_read_reg_1081 <= sample_imag_1_i;
        sample_imag_2_read_reg_1093 <= sample_imag_2_i;
        sample_imag_3_read_reg_1105 <= sample_imag_3_i;
        sample_imag_4_read_reg_1117 <= sample_imag_4_i;
        sample_imag_5_read_reg_1129 <= sample_imag_5_i;
        sample_imag_6_read_reg_1141 <= sample_imag_6_i;
        sample_imag_7_read_reg_1153 <= sample_imag_7_i;
        sample_real_0_read_reg_1063 <= sample_real_0_i;
        sample_real_1_read_reg_1075 <= sample_real_1_i;
        sample_real_2_read_reg_1087 <= sample_real_2_i;
        sample_real_3_read_reg_1099 <= sample_real_3_i;
        sample_real_4_read_reg_1111 <= sample_real_4_i;
        sample_real_5_read_reg_1123 <= sample_real_5_i;
        sample_real_6_read_reg_1135 <= sample_real_6_i;
        sample_real_7_read_reg_1147 <= sample_real_7_i;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter46_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_1_reg_1370 <= grp_fu_745_p2;
        tmp_2_42_reg_1380 <= grp_fu_753_p2;
        tmp_4_3_reg_1385 <= grp_fu_930_p2;
        tmp_5_3_reg_1390 <= grp_fu_934_p2;
        tmp_6_2_reg_1375 <= grp_fu_749_p2;
        tmp_7_1_reg_1365 <= grp_fu_741_p2;
        tmp_8_3_reg_1395 <= grp_fu_938_p2;
        tmp_9_3_reg_1400 <= grp_fu_942_p2;
        tmp_i_i8_reg_1405 <= grp_sin_or_cos_double_s_fu_563_ap_return;
        tmp_i_i9_reg_1411 <= grp_sin_or_cos_double_s_fu_582_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter51_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_2_reg_1428 <= grp_fu_761_p2;
        tmp_3_reg_1438 <= grp_fu_769_p2;
        tmp_4_4_reg_1443 <= grp_fu_951_p2;
        tmp_5_4_reg_1448 <= grp_fu_955_p2;
        tmp_6_3_reg_1433 <= grp_fu_765_p2;
        tmp_7_2_reg_1423 <= grp_fu_757_p2;
        tmp_8_4_reg_1453 <= grp_fu_959_p2;
        tmp_9_4_reg_1458 <= grp_fu_963_p2;
        tmp_i_i10_reg_1463 <= grp_sin_or_cos_double_s_fu_601_ap_return;
        tmp_i_i11_reg_1469 <= grp_sin_or_cos_double_s_fu_620_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter56_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_3_reg_1480 <= grp_fu_777_p2;
        tmp_4_43_reg_1490 <= grp_fu_785_p2;
        tmp_4_5_reg_1495 <= grp_fu_967_p2;
        tmp_5_5_reg_1500 <= grp_fu_971_p2;
        tmp_6_4_reg_1485 <= grp_fu_781_p2;
        tmp_7_3_reg_1475 <= grp_fu_773_p2;
        tmp_8_5_reg_1505 <= grp_fu_975_p2;
        tmp_9_5_reg_1510 <= grp_fu_979_p2;
        tmp_i_i12_reg_1515 <= grp_sin_or_cos_double_s_fu_639_ap_return;
        tmp_i_i13_reg_1521 <= grp_sin_or_cos_double_s_fu_658_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter41_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_41_reg_1322 <= grp_fu_737_p2;
        tmp_1_reg_1312 <= grp_fu_728_p2;
        tmp_4_2_reg_1327 <= grp_fu_909_p2;
        tmp_5_2_reg_1332 <= grp_fu_913_p2;
        tmp_6_1_reg_1317 <= grp_fu_733_p2;
        tmp_7_reg_1307 <= grp_fu_723_p2;
        tmp_8_2_reg_1337 <= grp_fu_917_p2;
        tmp_9_2_reg_1342 <= grp_fu_921_p2;
        tmp_i_i6_reg_1347 <= grp_sin_or_cos_double_s_fu_525_ap_return;
        tmp_i_i7_reg_1353 <= grp_sin_or_cos_double_s_fu_544_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter61_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_4_reg_1532 <= grp_fu_793_p2;
        tmp_4_6_reg_1547 <= grp_fu_983_p2;
        tmp_5_44_reg_1542 <= grp_fu_801_p2;
        tmp_5_6_reg_1552 <= grp_fu_987_p2;
        tmp_6_5_reg_1537 <= grp_fu_797_p2;
        tmp_7_4_reg_1527 <= grp_fu_789_p2;
        tmp_8_6_reg_1557 <= grp_fu_991_p2;
        tmp_9_6_reg_1562 <= grp_fu_995_p2;
        tmp_i_i14_reg_1567 <= grp_sin_or_cos_double_s_fu_677_ap_return;
        tmp_i_i15_reg_1573 <= grp_sin_or_cos_double_s_fu_696_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter66_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_5_reg_1584 <= grp_fu_809_p2;
        tmp_4_7_reg_1599 <= grp_fu_999_p2;
        tmp_5_7_reg_1604 <= grp_fu_1003_p2;
        tmp_6_45_reg_1594 <= grp_fu_817_p2;
        tmp_6_6_reg_1589 <= grp_fu_813_p2;
        tmp_7_5_reg_1579 <= grp_fu_805_p2;
        tmp_8_7_reg_1609 <= grp_fu_1007_p2;
        tmp_9_7_reg_1614 <= grp_fu_1011_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter71_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_6_reg_1624 <= grp_fu_825_p2;
        tmp_6_7_reg_1629 <= grp_fu_829_p2;
        tmp_7_46_reg_1634 <= grp_fu_833_p2;
        tmp_7_6_reg_1619 <= grp_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_1_reg_1269 <= grp_fu_888_p2;
        tmp_5_1_reg_1274 <= grp_fu_892_p2;
        tmp_6_reg_1259 <= grp_fu_715_p2;
        tmp_8_1_reg_1279 <= grp_fu_896_p2;
        tmp_9_1_reg_1284 <= grp_fu_900_p2;
        tmp_i_i4_reg_1289 <= grp_sin_or_cos_double_s_fu_487_ap_return;
        tmp_i_i5_reg_1295 <= grp_sin_or_cos_double_s_fu_506_ap_return;
        tmp_s_reg_1264 <= grp_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_reg_1221 <= grp_fu_867_p2;
        tmp_5_reg_1226 <= grp_fu_871_p2;
        tmp_8_reg_1231 <= grp_fu_875_p2;
        tmp_9_reg_1236 <= grp_fu_879_p2;
        tmp_i_i2_reg_1241 <= grp_sin_or_cos_double_s_fu_449_ap_return;
        tmp_i_i3_reg_1247 <= grp_sin_or_cos_double_s_fu_468_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_i1_reg_1209 <= grp_sin_or_cos_double_s_fu_430_ap_return;
        tmp_i_i_reg_1203 <= grp_sin_or_cos_double_s_fu_411_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_1173 <= grp_fu_1015_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_1041_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state81))) begin
        trunc_ln34_reg_1652 <= trunc_ln34_fu_1059_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_reg_1178 <= grp_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_2_reg_1197 <= grp_fu_857_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_3_reg_1215 <= grp_fu_862_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter32_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_4_reg_1253 <= grp_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter37_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_5_reg_1301 <= grp_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter42_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_6_reg_1359 <= grp_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter47_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_7_reg_1417 <= grp_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_1159_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_reg_1191 <= grp_fu_852_p2;
    end
end

always @ (*) begin
    if ((icmp_ln16_fu_1018_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) & (icmp_ln33_fu_1041_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_1159 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_392_p4 = i_2_reg_1163;
    end else begin
        ap_phi_mux_i_0_phi_fu_392_p4 = i_0_reg_388;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) & (icmp_ln33_fu_1041_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd0))) begin
        sample_imag_0_o = temp_imag_q0;
    end else begin
        sample_imag_0_o = sample_imag_0_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd0))) begin
        sample_imag_0_o_ap_vld = 1'b1;
    end else begin
        sample_imag_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd1))) begin
        sample_imag_1_o = temp_imag_q0;
    end else begin
        sample_imag_1_o = sample_imag_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd1))) begin
        sample_imag_1_o_ap_vld = 1'b1;
    end else begin
        sample_imag_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd2))) begin
        sample_imag_2_o = temp_imag_q0;
    end else begin
        sample_imag_2_o = sample_imag_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd2))) begin
        sample_imag_2_o_ap_vld = 1'b1;
    end else begin
        sample_imag_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd3))) begin
        sample_imag_3_o = temp_imag_q0;
    end else begin
        sample_imag_3_o = sample_imag_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd3))) begin
        sample_imag_3_o_ap_vld = 1'b1;
    end else begin
        sample_imag_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd4))) begin
        sample_imag_4_o = temp_imag_q0;
    end else begin
        sample_imag_4_o = sample_imag_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd4))) begin
        sample_imag_4_o_ap_vld = 1'b1;
    end else begin
        sample_imag_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd5))) begin
        sample_imag_5_o = temp_imag_q0;
    end else begin
        sample_imag_5_o = sample_imag_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd5))) begin
        sample_imag_5_o_ap_vld = 1'b1;
    end else begin
        sample_imag_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd6))) begin
        sample_imag_6_o = temp_imag_q0;
    end else begin
        sample_imag_6_o = sample_imag_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd6))) begin
        sample_imag_6_o_ap_vld = 1'b1;
    end else begin
        sample_imag_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd7))) begin
        sample_imag_7_o = temp_imag_q0;
    end else begin
        sample_imag_7_o = sample_imag_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd7))) begin
        sample_imag_7_o_ap_vld = 1'b1;
    end else begin
        sample_imag_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd0))) begin
        sample_real_0_o = temp_real_q0;
    end else begin
        sample_real_0_o = sample_real_0_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd0))) begin
        sample_real_0_o_ap_vld = 1'b1;
    end else begin
        sample_real_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd1))) begin
        sample_real_1_o = temp_real_q0;
    end else begin
        sample_real_1_o = sample_real_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd1))) begin
        sample_real_1_o_ap_vld = 1'b1;
    end else begin
        sample_real_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd2))) begin
        sample_real_2_o = temp_real_q0;
    end else begin
        sample_real_2_o = sample_real_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd2))) begin
        sample_real_2_o_ap_vld = 1'b1;
    end else begin
        sample_real_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd3))) begin
        sample_real_3_o = temp_real_q0;
    end else begin
        sample_real_3_o = sample_real_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd3))) begin
        sample_real_3_o_ap_vld = 1'b1;
    end else begin
        sample_real_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd4))) begin
        sample_real_4_o = temp_real_q0;
    end else begin
        sample_real_4_o = sample_real_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd4))) begin
        sample_real_4_o_ap_vld = 1'b1;
    end else begin
        sample_real_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd5))) begin
        sample_real_5_o = temp_real_q0;
    end else begin
        sample_real_5_o = sample_real_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd5))) begin
        sample_real_5_o_ap_vld = 1'b1;
    end else begin
        sample_real_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd6))) begin
        sample_real_6_o = temp_real_q0;
    end else begin
        sample_real_6_o = sample_real_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd6))) begin
        sample_real_6_o_ap_vld = 1'b1;
    end else begin
        sample_real_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd7))) begin
        sample_real_7_o = temp_real_q0;
    end else begin
        sample_real_7_o = sample_real_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) & (trunc_ln34_reg_1652 == 3'd7))) begin
        sample_real_7_o_ap_vld = 1'b1;
    end else begin
        sample_real_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        temp_imag_address0 = zext_ln34_fu_1053_p1;
    end else if (((ap_enable_reg_pp0_iter77 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        temp_imag_address0 = zext_ln18_fu_1035_p1;
    end else begin
        temp_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) | ((ap_enable_reg_pp0_iter77 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        temp_imag_ce0 = 1'b1;
    end else begin
        temp_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_1159_pp0_iter76_reg == 1'd0) & (ap_enable_reg_pp0_iter77 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_imag_we0 = 1'b1;
    end else begin
        temp_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        temp_real_address0 = zext_ln34_fu_1053_p1;
    end else if (((ap_enable_reg_pp0_iter77 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        temp_real_address0 = zext_ln18_fu_1035_p1;
    end else begin
        temp_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) | ((ap_enable_reg_pp0_iter77 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        temp_real_ce0 = 1'b1;
    end else begin
        temp_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_1159_pp0_iter76_reg == 1'd0) & (ap_enable_reg_pp0_iter77 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_real_we0 = 1'b1;
    end else begin
        temp_real_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln16_fu_1018_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter77 == 1'b1) & (ap_enable_reg_pp0_iter76 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln16_fu_1018_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter77 == 1'b1) & (ap_enable_reg_pp0_iter76 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            if (((1'b1 == ap_CS_fsm_state81) & (icmp_ln33_fu_1041_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter75 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter76 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter77 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_1015_p0 = ap_phi_mux_i_0_phi_fu_392_p4;

assign grp_sin_or_cos_double_s_fu_411_ap_start = grp_sin_or_cos_double_s_fu_411_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_411_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_430_ap_start = grp_sin_or_cos_double_s_fu_430_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_430_do_cos = 1'd0;

assign grp_sin_or_cos_double_s_fu_449_ap_start = grp_sin_or_cos_double_s_fu_449_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_449_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_468_ap_start = grp_sin_or_cos_double_s_fu_468_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_468_do_cos = 1'd0;

assign grp_sin_or_cos_double_s_fu_487_ap_start = grp_sin_or_cos_double_s_fu_487_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_487_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_506_ap_start = grp_sin_or_cos_double_s_fu_506_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_506_do_cos = 1'd0;

assign grp_sin_or_cos_double_s_fu_525_ap_start = grp_sin_or_cos_double_s_fu_525_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_525_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_544_ap_start = grp_sin_or_cos_double_s_fu_544_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_544_do_cos = 1'd0;

assign grp_sin_or_cos_double_s_fu_563_ap_start = grp_sin_or_cos_double_s_fu_563_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_563_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_582_ap_start = grp_sin_or_cos_double_s_fu_582_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_582_do_cos = 1'd0;

assign grp_sin_or_cos_double_s_fu_601_ap_start = grp_sin_or_cos_double_s_fu_601_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_601_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_620_ap_start = grp_sin_or_cos_double_s_fu_620_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_620_do_cos = 1'd0;

assign grp_sin_or_cos_double_s_fu_639_ap_start = grp_sin_or_cos_double_s_fu_639_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_639_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_658_ap_start = grp_sin_or_cos_double_s_fu_658_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_658_do_cos = 1'd0;

assign grp_sin_or_cos_double_s_fu_677_ap_start = grp_sin_or_cos_double_s_fu_677_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_677_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_696_ap_start = grp_sin_or_cos_double_s_fu_696_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_696_do_cos = 1'd0;

assign i_2_fu_1024_p2 = (ap_phi_mux_i_0_phi_fu_392_p4 + 4'd1);

assign i_fu_1047_p2 = (i_1_reg_400 + 4'd1);

assign icmp_ln16_fu_1018_p2 = ((ap_phi_mux_i_0_phi_fu_392_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1041_p2 = ((i_1_reg_400 == 4'd8) ? 1'b1 : 1'b0);

assign trunc_ln34_fu_1059_p1 = i_1_reg_400[2:0];

assign zext_ln18_fu_1035_p1 = i_0_reg_388_pp0_iter76_reg;

assign zext_ln34_fu_1053_p1 = i_1_reg_400;

endmodule //dft
